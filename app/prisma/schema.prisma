generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cardshome {
  id     Int    @id @default(autoincrement())
  imagen String @db.VarChar(50)
  texto  String @db.VarChar(50)
}

model equipos {
  id                                     Int         @id @default(autoincrement())
  nombre                                 String      @db.VarChar(50)
  foto                                   String      @db.VarChar(50)
  puntos                                 Int         @default(0)
  valor                                  Int?
  partidosJugados                        Int         @default(0)
  victorias                              Int         @default(0)
  derrotas                               Int         @default(0)
  empates                                Int         @default(0)
  jugadores                              Int?
  lesionados                             Int?
  jugadores_equiposTojugadores           jugadores[]
  partidos_equiposTopartidos_idLocal     partidos[]  @relation("equiposTopartidos_idLocal")
  partidos_equiposTopartidos_idVisitante partidos[]  @relation("equiposTopartidos_idVisitante")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model infojugadoresenpartido {
  idPartido   Int
  idJugador   Int
  titular     Boolean   @default(dbgenerated("(b'0')")) @db.Bit(1)
  goles       Int       @default(0)
  amarillas   Int       @default(0)
  rojaDirecta Boolean   @default(dbgenerated("(b'0')")) @db.Bit(1)
  puntos      Int       @default(0)
  jugadores   jugadores @relation(fields: [idJugador], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "infojugadoresenpartido_ibfk_2")
  partidos    partidos  @relation(fields: [idPartido], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "infojugadoresenpartido_ibfk_1")

  @@index([idJugador], map: "idJugador")
  @@index([idPartido], map: "idPartido")
  @@ignore
}

model jugadores {
  id                     Int                      @id @default(autoincrement())
  nombre                 String                   @db.VarChar(50)
  puntos                 Int                      @default(0)
  posicion               jugadores_posicion       @default(PT)
  valorMercado           Int                      @default(0)
  estado                 jugadores_estado         @default(P)
  foto                   String?                  @db.VarChar(50)
  idEquipo               Int
  idUsuario              Int
  equipos                equipos                  @relation(fields: [idEquipo], references: [id], onDelete: Cascade, map: "jugadores_ibfk_3")
  usuarios               usuarios                 @relation(fields: [idUsuario], references: [id], onDelete: Cascade, map: "jugadores_ibfk_4")
  infojugadoresenpartido infojugadoresenpartido[] @ignore
  traspasos              traspasos[]

  @@index([idEquipo], map: "idEquipo")
  @@index([idUsuario], map: "idUsuario")
}

model ligas {
  id                                      Int        @id @default(autoincrement())
  nombre                                  String     @db.VarChar(50)
  foto                                    String     @db.VarChar(50)
  codigoLiga                              String     @db.VarChar(50)
  abono                                   Int        @default(100000)
  numMaxPlantilla                         Int        @default(23)
  numJugMercado                           Int        @default(14)
  diasJugEnMercado                        Int        @default(2)
  diasGestionPujas                        Int        @default(2)
  idUsuarioLider                          Int
  usuarios_ligas_idUsuarioLiderTousuarios usuarios   @relation("ligas_idUsuarioLiderTousuarios", fields: [idUsuarioLider], references: [id], onDelete: Cascade, map: "ligas_ibfk_2")
  puntos                                  puntos[]   @ignore
  usuarios_ligasTousuarios_idLiga         usuarios[] @relation("ligasTousuarios_idLiga")

  @@index([idUsuarioLider], map: "idUsuarioLider")
}

model partidos {
  id                                    Int                      @id @default(autoincrement())
  jornada                               Int                      @default(0)
  idLocal                               Int
  idVisitante                           Int
  golesLocal                            Int                      @default(0)
  golesVisitante                        Int                      @default(0)
  fecha                                 DateTime                 @db.Date
  hora                                  DateTime                 @db.Time(0)
  equipos_equiposTopartidos_idLocal     equipos                  @relation("equiposTopartidos_idLocal", fields: [idLocal], references: [id], onDelete: Cascade, map: "partidos_ibfk_3")
  equipos_equiposTopartidos_idVisitante equipos                  @relation("equiposTopartidos_idVisitante", fields: [idVisitante], references: [id], onDelete: Cascade, map: "partidos_ibfk_4")
  infojugadoresenpartido                infojugadoresenpartido[] @ignore

  @@index([idLocal], map: "idLocal")
  @@index([idVisitante], map: "idVisitante")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model puntos {
  idLiga           Int
  titular          Int   @default(2)
  golDL            Int   @default(3)
  golMC            Int   @default(4)
  golDF            Int   @default(5)
  golPT            Int   @default(6)
  segundaAmarilla  Int   @default(-3)
  rojaDirecta      Int   @default(-6)
  malPartido       Int   @default(-2)
  noJuegaPartido   Int   @default(0)
  buenPartido      Int   @default(2)
  excelentePartido Int   @default(3)
  perfectoPartido  Int   @default(4)
  ligas            ligas @relation(fields: [idLiga], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "puntos_ibfk_1")

  @@index([idLiga], map: "idLiga")
  @@ignore
}

model traspasos {
  id                                             Int       @id @default(autoincrement())
  idJugador                                      Int
  idUsuarioEmisor                                Int
  idusuarioReceptor                              Int
  precio                                         Int
  jugadores                                      jugadores @relation(fields: [idJugador], references: [id], onDelete: Cascade, map: "traspasos_ibfk_4")
  usuarios_traspasos_idUsuarioEmisorTousuarios   usuarios  @relation("traspasos_idUsuarioEmisorTousuarios", fields: [idUsuarioEmisor], references: [id], onDelete: Cascade, map: "traspasos_ibfk_6")
  usuarios_traspasos_idusuarioReceptorTousuarios usuarios  @relation("traspasos_idusuarioReceptorTousuarios", fields: [idusuarioReceptor], references: [id], onDelete: Cascade, map: "traspasos_ibfk_5")

  @@index([idJugador], map: "idJugador")
  @@index([idUsuarioEmisor], map: "idUsuarioEmisor")
  @@index([idusuarioReceptor], map: "idusuarioReceptor")
}

model usuarios {
  id                                              Int             @id @default(autoincrement())
  nombre                                          String          @db.VarChar(50)
  apellidos                                       String?         @db.VarChar(50)
  usuario                                         String          @unique(map: "usuario") @db.VarChar(50)
  email                                           String          @db.VarChar(50)
  password                                        String          @db.Char(32)
  token                                           String          @db.VarChar(50)
  estado                                          usuarios_estado @default(P)
  lider                                           Boolean         @default(dbgenerated("(b'0')")) @db.Bit(1)
  foto                                            String          @default("userDefecto.png") @db.VarChar(50)
  idLiga                                          Int?
  ligas_ligasTousuarios_idLiga                    ligas?          @relation("ligasTousuarios_idLiga", fields: [idLiga], references: [id], onDelete: Cascade, map: "usuarios_ibfk_2")
  jugadores                                       jugadores[]
  ligas_ligas_idUsuarioLiderTousuarios            ligas[]         @relation("ligas_idUsuarioLiderTousuarios")
  traspasos_traspasos_idUsuarioEmisorTousuarios   traspasos[]     @relation("traspasos_idUsuarioEmisorTousuarios")
  traspasos_traspasos_idusuarioReceptorTousuarios traspasos[]     @relation("traspasos_idusuarioReceptorTousuarios")

  @@index([idLiga], map: "idLiga")
}

model iconosnoticias {
  id     Int                 @id @default(autoincrement())
  tema   iconosnoticias_tema @unique(map: "tema")
  imagen String              @db.VarChar(50)
}

model noticias {
  id    Int           @id @default(autoincrement())
  tema  noticias_tema @default(I)
  texto String        @db.VarChar(50)
  fecha DateTime      @default(now()) @db.DateTime(0)
  dia   DateTime      @default(now()) @db.Date
  hora  DateTime      @default(now()) @db.Time(0)
}

enum jugadores_posicion {
  PT
  DF
  MC
  DL
}

enum jugadores_estado {
  OK
  L
  EX
  P
}

enum usuarios_estado {
  P
  A
  B
}

enum iconosnoticias_tema {
  I
  T
}

enum noticias_tema {
  I
  T
}
