generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model calendario {
  id                                                  Int                      @id @default(autoincrement())
  jornada                                             Int
  idLocal                                             Int
  idVisitante                                         Int
  fecha                                               DateTime                 @default(now()) @db.DateTime(0)
  jugado                                              Boolean                  @default(dbgenerated("(b'0')")) @db.Bit(1)
  golesLocal                                          Int?
  golesVisitante                                      Int?
  equiposreales_calendario_idLocalToequiposreales     equiposreales            @relation("calendario_idLocalToequiposreales", fields: [idLocal], references: [id], onDelete: Cascade, map: "calendario_ibfk_5")
  equiposreales_calendario_idVisitanteToequiposreales equiposreales            @relation("calendario_idVisitanteToequiposreales", fields: [idVisitante], references: [id], onDelete: Cascade, map: "calendario_ibfk_6")
  infojugadoresenpartido                              infojugadoresenpartido[]

  @@index([idLocal], map: "idLocal")
  @@index([idVisitante], map: "idVisitante")
}

model cardshome {
  id     Int    @id @default(autoincrement())
  imagen String @db.VarChar(50)
  texto  String @db.VarChar(50)
}

model equiposreales {
  id                                               Int                  @id @default(autoincrement())
  nombre                                           String               @db.VarChar(50)
  foto                                             String               @db.VarChar(50)
  puntos                                           Int                  @default(0)
  valor                                            Int?
  partidosJugados                                  Int                  @default(0)
  victorias                                        Int                  @default(0)
  derrotas                                         Int                  @default(0)
  empates                                          Int                  @default(0)
  jugadores                                        Int?
  lesionados                                       Int?
  calendario_calendario_idLocalToequiposreales     calendario[]         @relation("calendario_idLocalToequiposreales")
  calendario_calendario_idVisitanteToequiposreales calendario[]         @relation("calendario_idVisitanteToequiposreales")
  jugadoresreales                                  jugadoresreales[]
  logosequiposreales                               logosequiposreales[]
}

model equiposusuarios {
  id                                                        Int                         @id @default(autoincrement())
  idUsuario                                                 Int
  idLiga                                                    Int
  nombre                                                    String                      @db.VarChar(50)
  foto                                                      String                      @default("logoEquipoDefecto26") @db.VarChar(50)
  puntos                                                    Int                         @default(0)
  dinero                                                    Int                         @default(40000000)
  numJugadores                                              Int                         @default(15)
  ligas                                                     ligas                       @relation(fields: [idLiga], references: [id], onDelete: Cascade, map: "equiposusuarios_ibfk_4")
  usuarios                                                  usuarios                    @relation(fields: [idUsuario], references: [id], onDelete: Cascade, map: "equiposusuarios_ibfk_3")
  jugadoresrealesencadaliga                                 jugadoresrealesencadaliga[]
  traspasos_equiposusuariosTotraspasos_idEquipoUserEmisor   traspasos[]                 @relation("equiposusuariosTotraspasos_idEquipoUserEmisor")
  traspasos_equiposusuariosTotraspasos_idEquipoUserReceptor traspasos[]                 @relation("equiposusuariosTotraspasos_idEquipoUserReceptor")

  @@index([idLiga], map: "idLiga")
  @@index([idUsuario], map: "idUsuario")
}

model iconosestadojugador {
  id     Int                        @id @default(autoincrement())
  imagen String                     @db.VarChar(50)
  estado iconosestadojugador_estado @unique(map: "estado")
}

model iconosnoticias {
  id     Int                 @id @default(autoincrement())
  tema   iconosnoticias_tema
  imagen String              @db.VarChar(50)
}

model infojugadoresenpartido {
  id              Int                                   @id @default(autoincrement())
  idPartido       Int
  idJugador       Int
  titular         Boolean                               @default(dbgenerated("(b'0')")) @db.Bit(1)
  goles           Int                                   @default(0)
  amarillas       Int                                   @default(0)
  rojaDirecta     Boolean                               @default(dbgenerated("(b'0')")) @db.Bit(1)
  juegoEnPartido  infojugadoresenpartido_juegoEnPartido @default(NJ)
  puntos          Int                                   @default(0)
  jugadoresreales jugadoresreales                       @relation(fields: [idJugador], references: [id], onDelete: Cascade, map: "infojugadoresenpartido_ibfk_4")
  calendario      calendario                            @relation(fields: [idPartido], references: [id], onDelete: Cascade, map: "infojugadoresenpartido_ibfk_5")

  @@unique([idPartido, idJugador], map: "idPartido_idJugador")
  @@index([idJugador], map: "idJugador")
  @@index([idPartido], map: "idPartido")
}

model jugadoresreales {
  id                        Int                         @id @default(autoincrement())
  nombre                    String                      @db.VarChar(50)
  apellidos                 String                      @db.VarChar(50)
  alias                     String                      @db.VarChar(50)
  puntos                    Int                         @default(0)
  posicion                  jugadoresreales_posicion    @default(PT)
  valorMercado              Int                         @default(0)
  estado                    jugadoresreales_estado      @default(P)
  foto                      String?                     @db.VarChar(50)
  idEquipoReal              Int
  equiposreales             equiposreales               @relation(fields: [idEquipoReal], references: [id], onDelete: Cascade, map: "jugadoresreales_ibfk_3")
  fotosjugadoresreales      fotosjugadoresreales[]
  infojugadoresenpartido    infojugadoresenpartido[]
  jugadoresrealesencadaliga jugadoresrealesencadaliga[]
  traspasos                 traspasos[]

  @@index([idEquipoReal], map: "idEquipo")
}

model jugadoresrealesencadaliga {
  idJugadorReal      Int
  idLiga             Int
  idEquipoUser       Int?
  titular            Boolean          @default(dbgenerated("(b'0')")) @db.Bit(1)
  mercado            Boolean          @default(dbgenerated("(b'0')")) @db.Bit(1)
  valorTransferencia Int?
  equiposusuarios    equiposusuarios? @relation(fields: [idEquipoUser], references: [id], onDelete: Cascade, map: "jugadoresrealesencadaliga_ibfk_5")
  jugadoresreales    jugadoresreales  @relation(fields: [idJugadorReal], references: [id], onDelete: Cascade, map: "jugadoresrealesencadaliga_ibfk_4")
  ligas              ligas            @relation(fields: [idLiga], references: [id], onDelete: Cascade, map: "jugadoresrealesencadaliga_ibfk_6")

  @@unique([idJugadorReal, idLiga], map: "idJugadorReal_idLiga")
  @@index([idEquipoUser], map: "idEquipoUser")
  @@index([idJugadorReal], map: "idJugadorReal")
  @@index([idLiga], map: "idLiga")
}

model ligas {
  id                        Int                         @id @default(autoincrement())
  nombre                    String                      @db.VarChar(50)
  foto                      String                      @default("logoLigaDefecto14") @db.VarChar(50)
  codigoLiga                String                      @db.VarChar(50)
  abono                     Int                         @default(100000)
  numMaxPlantilla           Int                         @default(23)
  numJugMercado             Int                         @default(14)
  diasJugEnMercado          Int                         @default(2)
  diasGestionPujas          Int                         @default(2)
  idUsuarioLider            Int
  usuarios                  usuarios                    @relation(fields: [idUsuarioLider], references: [id], onDelete: Cascade, map: "ligas_ibfk_2")
  equiposusuarios           equiposusuarios[]
  jugadoresrealesencadaliga jugadoresrealesencadaliga[]
  noticias                  noticias[]
  puntosliga                puntosliga?

  @@index([idUsuarioLider], map: "idUsuarioLider")
}

model noticias {
  id     Int           @id @default(autoincrement())
  idLiga Int
  tema   noticias_tema @default(I)
  texto  String        @db.VarChar(50)
  fecha  DateTime      @default(now()) @db.DateTime(0)
  ligas  ligas         @relation(fields: [idLiga], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "noticias_ibfk_1")

  @@index([idLiga], map: "idLiga")
}

model puntosliga {
  id               Int   @id @default(autoincrement())
  idLiga           Int   @unique(map: "idLiga")
  titular          Int   @default(2)
  golDL            Int   @default(3)
  golMC            Int   @default(4)
  golDF            Int   @default(5)
  golPT            Int   @default(6)
  primeraAmarilla  Int   @default(-1)
  segundaAmarilla  Int   @default(-3)
  rojaDirecta      Int   @default(-6)
  malPartido       Int   @default(-2)
  noJuegaPartido   Int   @default(0)
  buenPartido      Int   @default(2)
  excelentePartido Int   @default(3)
  perfectoPartido  Int   @default(4)
  ligas            ligas @relation(fields: [idLiga], references: [id], onDelete: Cascade, map: "puntosliga_ibfk_2")
}

model traspasos {
  id                                                              Int              @id @default(autoincrement())
  idJugador                                                       Int
  idEquipoUserEmisor                                              Int
  idEquipoUserReceptor                                            Int?
  precio                                                          Int
  estado                                                          traspasos_estado @default(P)
  equiposusuarios_equiposusuariosTotraspasos_idEquipoUserEmisor   equiposusuarios  @relation("equiposusuariosTotraspasos_idEquipoUserEmisor", fields: [idEquipoUserEmisor], references: [id], onDelete: Cascade, map: "traspasos_ibfk_7")
  equiposusuarios_equiposusuariosTotraspasos_idEquipoUserReceptor equiposusuarios? @relation("equiposusuariosTotraspasos_idEquipoUserReceptor", fields: [idEquipoUserReceptor], references: [id], onDelete: Cascade, map: "traspasos_ibfk_8")
  jugadoresreales                                                 jugadoresreales  @relation(fields: [idJugador], references: [id], onDelete: Cascade, map: "traspasos_ibfk_4")

  @@index([idEquipoUserEmisor], map: "idEquipoUserEmisor")
  @@index([idEquipoUserReceptor], map: "idEquipoUserReceptor")
  @@index([idJugador], map: "idJugador")
}

model usuarios {
  id              Int               @id @default(autoincrement())
  nombre          String            @db.VarChar(50)
  apellidos       String?           @db.VarChar(50)
  usuario         String            @unique(map: "usuario") @db.VarChar(50)
  email           String            @db.VarChar(50)
  password        String            @db.Char(32)
  token           String            @db.VarChar(50)
  estado          usuarios_estado   @default(P)
  equiposusuarios equiposusuarios[]
  ligas           ligas[]
}

model fotosjugadoresreales {
  id              Int             @id @default(autoincrement())
  idJugadorReal   Int
  nombre          String          @db.VarChar(20)
  jugadoresreales jugadoresreales @relation(fields: [idJugadorReal], references: [id], onDelete: Cascade, map: "fotosjugadoresreales_ibfk_2")

  @@index([idJugadorReal], map: "idJugadorReal")
}

model logosequiposreales {
  id            Int           @id @default(autoincrement())
  idEquipoReal  Int
  nombre        String        @db.VarChar(20)
  equiposreales equiposreales @relation(fields: [idEquipoReal], references: [id], onDelete: Cascade, map: "logosequiposreales_ibfk_2")

  @@index([idEquipoReal], map: "idEquipoReal")
}

model logosequipousers {
  id     Int    @id @default(autoincrement())
  nombre String @unique(map: "nombre") @db.VarChar(20)
}

enum iconosestadojugador_estado {
  OK
  L
  EX
  P
}

enum iconosnoticias_tema {
  I
  T
}

enum infojugadoresenpartido_juegoEnPartido {
  MP
  NJ
  BP
  EP
  PP
}

enum jugadoresreales_posicion {
  PT
  CI
  AL
  PV
}

enum jugadoresreales_estado {
  OK
  L
  EX
  P
}

enum noticias_tema {
  I
  T
}

enum traspasos_estado {
  P
  OK
  R
}

enum usuarios_estado {
  P
  A
  B
}
